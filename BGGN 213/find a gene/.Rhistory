clustal <- read.alignment('muscle-I20221128-234051-0689-31497626-p1m.clw',format='clustal')
clustal <- read.alignment('muscle-I20221128-234051-0689-31497626-p1m.clw',format='clustal',package = "seqinr")
install.packages('seqinr')
# read alignment sequence
library(seqinr)
clustal <- read.alignment('muscle-I20221128-234051-0689-31497626-p1m.clw',format='clustal',package = "seqinr")
clustal
fasta <- write.fasta(clustal)
fasta <- write.fasta(clustal, 'find_a_gene.fasta')
fasta <- write.fasta(sequences=clustal, file.out='find_a_gene.fasta')
names <- c('Cattle','House_mouse','Gairdnerâ€™s_shrewmouse','Roborovski_dwarf_hamster','Chinese_hamster')
fasta <- write.fasta(sequences=clustal, names=names, file.out='find_a_gene.fasta')
fasta
fasta <- write.fasta(sequences=clustal, names=names, file.out='find_a_gene.fst')
fasta
write.fasta(sequences=clustal, names=names, file.out='find_a_gene.fst')
fasta<- read.fasta('find_a_gene.fst')
fasta<- read.fasta('find_a_gene.fst')
fasta
alignment <- read.fasta('alignment.fst')
alignment
library(bio3d)
identities <- seqidentity(fasta)
clustal == fasta
identities <- seqidentity(alignment)
identities <- seqidentity(fasta)
pheatmap(fasta)
install.packages('pheatmap')
pheatmap(fasta)
library(pheatmap)
pheatmap(fasta)
pheatmap(alignment)
identities <- seqidentity(fasta)
consensus <- consensus(fasta)
consensus <- consensus(alignment)
View(alignment)
alignment <- read.fasta("alignment.fst")
alignment
identities <- seqidentity(alignment)
pheatmap(alignment)
pheatmap(identities)
pheatmap(identities,annotation_row=names)
pheatmap(identities,annotation_col=names)
pheatmap(identities)
pheatmap(identities,annotation_names_col = FALSE)
pheatmap(identities)
View(alignment)
alignment$id <- names
identities <- seqidentity(alignment)
pheatmap(identities)
pheatmap(identities,angle_col=45)
pheatmap(identities,angle_col=45,filename='Q7heatmap.png')
consensus <- consensus(alignment)
blast.pdb(consensus)
prot.blast(consensus)
library(bio3d)
prot.blast(consensus)
plot.blast(consensus)
consensus
blast.pdb(consensus)
read.pdb(consensus)
blast.pdb(consensus)
blast.pdb(alignment)
pdb.annotate("1YY1_A")
pdb.annotate("4D5M_A")
pdb.annotate("1QO8_A")
