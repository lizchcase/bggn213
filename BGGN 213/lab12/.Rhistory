install.packages("BiocManager")
BiocManager::install()
BiocManager::install("DESeq2")
library(BiocManager)
library(DESeq2)
# load data and metadata
counts <- read.csv("airway_scaledcounts.csv", row.names=1)
metadata <-  read.csv("airway_metadata.csv")
head(counts)
head(metadata)
head(counts)
counts
metadata
metadata$dex == "control"
sum(metadata$dex == "control")
control <- metadata[metadata[,"dex"]=="control",]
control.counts <- counts[ ,control$id]
control.mean <- rowSums( control.counts )/ sum(metadata$dex == "control")
head(control.mean)
treated <- metadata[metadata[,"dex"]=="treated",]
treated.counts <- counts[ ,treated$id]
treated.mean <- rowSums( treated.counts )/ sum(metadata$dex == "treated")
head(treated.mean)
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot(control.mean,treated.mean)
library(ggplot2)
ggplot(meancounts,aes(x=control.mean,y=treated.mean)) +
geom_point()
library(ggplot2)
ggplot(meancounts,aes(x=control.mean,y=treated.mean,alpha=0.6)) +
geom_point()
library(ggplot2)
ggplot(meancounts,aes(x=control.mean,y=treated.mean)) +
geom_point(alpha=0.6)
ggplot(meancounts,aes(x=control.mean,y=treated.mean)) +
geom_point(aes(alpha=0.6))
library(ggplot2)
ggplot(meancounts,aes(x=control.mean,y=treated.mean)) +
geom_point() +
scale_x_continuous(trans="log2") +
scale_y_continuous(trans="log2")
# add log2foldchange to meancounts
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
# get rid of genes with value 0 for log
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[-to.rm,]
head(mycounts)
?which
# DEG threshold
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
up.ind
sum(up.ind)
print(paste('There are',sum(up.ind),'upregulated genes using 2fc as the threshold.'))
print(paste('There are',sum(down.ind),'downregulated genes using 2fc as the threshold.'))
library(DESeq2)
citation("DESeq2")
# load data
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex)
dds
dds <- DESeq(dds)
res <- results(dds)
res <- results(dds)
res
View(as.data.frame(res))
summary(res)
res05 <- results(dds, alpha=0.05)
summary(res05)
library("AnnotationDbi")
library("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
res$symbol <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="SYMBOL",          # The new format we want to add
multiVals="first")
res$symbol <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL", # The format of our genenames
column="SYMBOL", # The new format we want to add
multiVals="first")
head(res)
res$entrez <- mapIds(org.Hs.eg.db,
keys=row.names(res),
column="ENTREZID",
keytype="ENSEMBL",
multiVals="first")
res$uniprot <- mapIds(org.Hs.eg.db,
keys=row.names(res),
column="UNIPROT",
keytype="ENSEMBL",
multiVals="first")
res$genename <- mapIds(org.Hs.eg.db,
keys=row.names(res),
column="GENENAME",
keytype="ENSEMBL",
multiVals="first")
head(res)
# arrange and view the results by adjusted p-value
ord <- order( res$padj )
head(res[ord,])
# write to csv
write.csv(res[ord,], "deseq_results.csv")
# volcano plot
plot( res$log2FoldChange,  -log(res$padj),
xlab="Log2(FoldChange)",
ylab="-Log(P-value)")
# volcano plot
plot( res$log2FoldChange,  -log(res$padj),
ylab="-Log(P-value)", xlab="Log2(FoldChange)")
# Add some cut-off lines
abline(v=c(-2,2), col="darkgray", lty=2)
abline(h=-log(0.05), col="darkgray", lty=2)
# volcano plot
# Setup our custom point color vector
mycols <- rep("gray", nrow(res))
mycols[ abs(res$log2FoldChange) > 2 ]  <- "red"
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"
# Volcano plot with custom colors
plot( res$log2FoldChange,  -log(res$padj),
col=mycols, ylab="-Log(P-value)", xlab="Log2(FoldChange)" )
# Cut-off lines
abline(v=c(-2,2), col="gray", lty=2)
abline(h=-log(0.1), col="gray", lty=2)
# enhanced volcano
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
x <- as.data.frame(res)
EnhancedVolcano(x,
lab = x$symbol,
x = 'log2FoldChange',
y = 'pvalue')
BiocManager::install( c("pathview", "gage", "gageData") )
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)
# Examine the first 2 pathways in this kegg set for humans
head(kegg.sets.hs, 2)
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
# run gage pathway analysis
keggres = gage(foldchanges, gsets=kegg.sets.hs)
attributes(keggres)
# Look at the first three down (less) pathways
head(keggres$less, 3)
pathview(gene.data=foldchanges, pathway.id="hsa05310")
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa05310", kegg.native=FALSE)
i <- grep("CRISPLD2", res$symbol)
res[i,]
plotCounts(dds, gene=rownames(res[i,]), intgroup="dex")
# Return the data
d <- plotCounts(dds, gene="ENSG00000103196", intgroup="dex", returnData=TRUE)
head(d)
boxplot(count ~ dex , data=d)
ggplot(d, aes(dex, count, fill=dex)) +
geom_boxplot() +
scale_y_log10() +
ggtitle("CRISPLD2")
pathview(gene.data=foldchanges, pathway.id="hsa05332")
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa05332", kegg.native=FALSE)
# Type I diabetes mellitus (hsa04940)
pathview(gene.data=foldchanges, pathway.id="hsa04940")
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04940", kegg.native=FALSE)
