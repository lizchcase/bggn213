# import data
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
candy = read.csv(candy_file, row.names=1)
head(candy)
print(paste('there are',nrow(candy),'candy types in the dataset')
print(paste('there are',nrow(candy),'candy types in the dataset'))
print(paste('there are',nrow(candy),'candy types in the dataset'))
candy$fruity
sum(candy$fruity)
print(paste('there are',sum(candy$fruity),'fruity candy types in the dataset'))
candy["Almond Joy", ]$winpercent
candy["Kit Kat", ]$winpercent
candy["Tootsie Roll Snack Bars", ]$winpercent
# introduce skimr
library("skimr")
install.packages("skimr")
# introduce skimr
library("skimr")
library("skimr")
install.packages("rlang")
install.packages("rlang")
# introduce skimr
library("skimr")
file.edit(file.path("~", ".Rprofile"))
install.packages("rlang")
install.packages("rlang")
install.packages("skimr")
# introduce skimr
library("skimr")
remove.packages(“rlang”)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
# introduce skimr
library("skimr")
ggplot(candy) +
geom_hist()
ggplot(candy) +
geom_hist()
hist(candy$winpercent)
candy$winpercent[as.logical(candy$nougat)]
candy$winpercent[as.logical(candy$chocolate)]
mean(candy$winpercent[as.logical(candy$chocolate)])
print(paste('chocolate:',mean(candy$winpercent[as.logical(candy$chocolate)]),'; fruity:'mean(candy$winpercent[as.logical(candy$fruity)])))
print(paste('chocolate:',mean(candy$winpercent[as.logical(candy$chocolate)]),'; fruity:',mean(candy$winpercent[as.logical(candy$fruity)])))
print('on average, chocolate candy is higher ranked than fruity candy')
print(paste('chocolate:',mean(candy$winpercent[as.logical(candy$chocolate)]),'; fruity:',mean(candy$winpercent[as.logical(candy$fruity)])))
print('on average, chocolate candy is higher ranked than fruity candy')
?t.test
t.test(candy$chocolate,candy$fruity)
t.test(candy$fruity,candy$chocolate)
t.test(candy$winpercent[as.logical(candy$fruity)],candy$winpercent[as.logical(candy$chocolate)])
t.test(candy$winpercent[as.logical(candy$chocolate)],candy$winpercent[as.logical(candy$fruity)])
candy %>% arrange(winpercent) %>% head(5)
head(candy[order(candy$winpercent),], n=5)
?order
head(candy[order(candy$winpercent),decreasing=TRUE], n=5)
head(candy[order(candy$winpercent,decreasing=TRUE),], n=5)
library(ggplot2)
library(ggrepel)
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
ord <- order(candy$pricepercent, decreasing = FALSE)
head( candy[ord,c(11,12)], n=5 )
ord <- order(candy$pricepercent, decreasing = FALSE)
head( candy[ord,c(11,12)], n=5 )
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
library(corrplot)
cij <- cor(candy)
corrplot(cij)
pca <- prcom(candy, scale=TRUE)
pca <- prcomp(candy, scale=TRUE)
summary(pca)
View(pca)
# plot PC1 and PC2
plot(pca$x[,1:2])
# plot PC1 and PC2
plot(pca$x[,1:2],col=my_cols,pch=16)
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
# plot PC1 and PC2
plot(pca$x[,1:2],col=my_cols,pch=16)
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
library(plotly)
# make loadings plot
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
# import data
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
head(candy)
print(paste('there are',nrow(candy),'candy types in the dataset'))
print(paste('there are',sum(candy$fruity),'fruity candy types in the dataset'))
candy["Almond Joy", ]$winpercent
candy["Kit Kat", ]$winpercent
candy["Tootsie Roll Snack Bars", ]$winpercent
# introduce skimr
library("skimr")
skim(candy)
hist(candy$winpercent)
print(paste('chocolate:',mean(candy$winpercent[as.logical(candy$chocolate)]),'; fruity:',mean(candy$winpercent[as.logical(candy$fruity)])))
print('on average, chocolate candy is higher ranked than fruity candy')
t.test(candy$winpercent[as.logical(candy$chocolate)],candy$winpercent[as.logical(candy$fruity)])
head(candy[order(candy$winpercent),], n=5)
head(candy[order(candy$winpercent,decreasing=TRUE),], n=5)
library(ggplot2)
ggplot(candy) +
aes(winpercent, rownames(candy)) +
geom_bar()
ggplot(candy,aes(winpercent, rownames(candy))) +
geom_bar()
ggplot(candy,aes(winpercent, rownames(candy)))
ggplot(candy,aes(winpercent, rownames(candy))) +
geom_bar()
ggplot(candy,aes(winpercent, rownames(candy))) +
geom_rect()
library(ggplot2)
ggplot(candy,aes(winpercent, rownames(candy))) +
geom_rect()
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_bar()
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col(fill=my_cols)
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col()
library(ggplot2)
ggplot(candy,aes(winpercent, rownames(candy))) +
geom_col()
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
aes(winpercent, pricepercent, label=rownames(candy)) +
geom_point(col=my_cols) +
geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
ord <- order(candy$pricepercent, decreasing = FALSE)
head( candy[ord,c(11,12)], n=5 )
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
library(corrplot)
cij <- cor(candy)
corrplot(cij)
pca <- prcomp(candy, scale=TRUE)
summary(pca)
# plot PC1 and PC2
plot(pca$x[,1:2],col=my_cols,pch=16)
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
p <- ggplot(my_data) +
aes(x=PC1, y=PC2,
size=winpercent/100,
text=rownames(my_data),
label=rownames(my_data)) +
geom_point(col=my_cols)
p
library(ggrepel)
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  +
theme(legend.position = "none") +
labs(title="Halloween Candy PCA Space",
subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
caption="Data from 538")
library(plotly)
ggplotly(p)
# make loadings plot
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
tinytex::install_tinytex()
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
